{
  "version": 3,
  "sources": ["../csv.js", "../file.js", "../datetime.js", "../droparea.js", "../i18n.js", "../rest.js", "../types.js", "../url.js", "../index.js"],
  "sourcesContent": ["import { exportFile } from \"./file.js\";\n\nexport const parseCSV = (csvData) => {\n  const rows = csvData.trim().split(\"\\n\"); // Trim to remove trailing newlines\n  const headers = rows[0].split(\",\");\n\n  return rows\n    .slice(1)\n    .map((row) => {\n      const values = row.split(\",\");\n      return headers.reduce((object, header, index) => {\n        object[header] = values[index];\n        return object;\n      }, {});\n    })\n    .filter((row) => Object.values(row).some((value) => value)); // Filter out empty rows\n};\n\n// Function to get field names from the data\nexport const getFields = (data) => {\n  return data.length > 0 ? Object.keys(data[0]) : [];\n};\n\n// 3. Remove columns\nexport const removeColumns = (data, columnsToRemove) => {\n  return data.map((row) => {\n    columnsToRemove.forEach((column) => delete row[column]);\n    return row;\n  });\n};\n// Function to convert data to CSV\nexport const convertToCSV = (data) => {\n  if (data.length === 0) return \"\";\n\n  // Extract headers\n  const headers = Object.keys(data[0]);\n\n  // Convert each object to a CSV row\n  const rows = data.map((obj) =>\n    headers.map((header) => JSON.stringify(obj[header] ?? \"\")).join(\",\"),\n  );\n\n  // Combine headers and rows\n  return [headers.join(\",\"), ...rows].join(\"\\n\");\n};\n\n// Updated exportCSV to use exportFile\nexport const exportCSV = (data) => {\n  const csvString = convertToCSV(data);\n  exportFile(csvString, \"exported-data.csv\", \"text/csv\");\n};\n\nexport const transformCsvData = (csvData, fieldMapping) => {\n  return csvData.map((row) => mapRowToModel(row, fieldMapping));\n};\nconst mapRowToModel = (row, fieldMapping) => {\n  return Object.keys(fieldMapping).reduce((acc, modelField) => {\n    const csvField = fieldMapping[modelField];\n    acc[modelField] = row[csvField];\n    return acc;\n  }, {});\n};\n", "export const readFile = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (event) => resolve(event.target.result);\n    reader.onerror = (error) => reject(error);\n    reader.readAsText(file);\n  });\n};\n\n// Generic function to export files\nexport const exportFile = (content, fileName, mimeType) => {\n  const blob = new Blob([content], { type: mimeType });\n  const link = document.createElement(\"a\");\n  link.href = URL.createObjectURL(blob);\n  link.download = fileName;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n// 2. Parse the CSV data\nexport const parseCSV = (csvData) => {\n  const rows = csvData.split(\"\\n\");\n  const headers = rows[0].split(\",\");\n\n  return rows.slice(1).map((row) => {\n    const values = row.split(\",\");\n    return headers.reduce((object, header, index) => {\n      object[header] = values[index];\n      return object;\n    }, {});\n  });\n};\n", "export const formatDate = (timestamp) => {\n  const date = new Date(timestamp);\n  return date.toLocaleDateString(navigator.language);\n};\n\nexport const formatTime = (timestamp) => {\n  const date = new Date(timestamp);\n  const options = {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    hour12: true,\n  };\n  return date.toLocaleTimeString(navigator.language, options);\n};\n\nexport const formatDateTime = (timestamp) => {\n  const date = new Date(timestamp);\n  return date.toLocaleString(navigator.language);\n};\n\nexport const timeAgo = (timestamp) => {\n  const now = Date.now();\n  const difference = now - timestamp;\n\n  const minute = 60 * 1000;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const week = day * 7;\n\n  if (difference < minute) {\n    return \"Just now\";\n  } else if (difference < hour) {\n    return Math.round(difference / minute) + \" minutes ago\";\n  } else if (difference < day) {\n    return Math.round(difference / hour) + \" hours ago\";\n  } else if (difference < week) {\n    return Math.round(difference / day) + \" days ago\";\n  } else {\n    return formatDate(timestamp);\n  }\n};\n\nexport default { formatDate, formatDateTime, formatTime, timeAgo };\n", "let currentDroparea;\nlet currentDraggedItem;\nlet currentPosition;\nlet placeholderElement;\n\nconst createPlaceholderElement = () => {\n  if (!placeholderElement) {\n    placeholderElement = document.createElement(\"div\");\n    placeholderElement.classList.add(\n      \"drag-placeholder\",\n      \"h-24\",\n      \"w-24\",\n      \"bg-primary\",\n      \"border\",\n      \"transition-all\",\n      \"m-auto\"\n    );\n  }\n  return placeholderElement;\n};\n\nconst insertPlaceholder = (parent, position = \"end\", referenceNode = null) => {\n  const placeholder = createPlaceholderElement();\n  if (position === \"start\") {\n    parent.insertBefore(placeholder, parent.firstChild);\n  } else if (position === \"before\" && referenceNode) {\n    parent.insertBefore(placeholder, referenceNode);\n  } else {\n    parent.appendChild(placeholder);\n  }\n};\nconst removeExistingPlaceholder = (parent) => {\n  const existingPlaceholder = parent.querySelector(\".drag-placeholder\");\n  existingPlaceholder?.remove();\n};\nexport const draggable = {\n  dragstart: function () {\n    currentDraggedItem = this.id;\n    this.style.opacity = \"0.1\";\n  },\n\n  dragend: function () {\n    this.style.opacity = \"1\";\n    if (currentDroparea && currentDraggedItem && !isNaN(currentPosition)) {\n      this.dropItem?.({\n        droparea: currentDroparea,\n        item: currentDraggedItem,\n        position: currentPosition\n      });\n\n      // Reset state\n      currentDroparea = null;\n      currentDraggedItem = null;\n      currentPosition = null;\n    }\n\n    if (placeholderElement) {\n      placeholderElement.remove();\n    }\n  },\n\n  connectedCallback: function () {\n    if (this.draggable) {\n      this.addEventListener(\"dragstart\", this.dragstart);\n      this.addEventListener(\"dragend\", this.dragend);\n    }\n  },\n\n  disconnectedCallback: function () {\n    if (this.draggable) {\n      this.removeEventListener(\"dragstart\", this.dragstart);\n      this.removeEventListener(\"dragend\", this.dragend);\n    }\n  }\n};\nexport const droparea = {\n  drop: function (event) {\n    event.preventDefault();\n    const children = Array.from(event.currentTarget.children);\n    currentPosition = children.indexOf(placeholderElement);\n    removeExistingPlaceholder(event.currentTarget);\n  },\n\n  dragleave: function (event) {\n    const dropareaBounds = event.currentTarget.getBoundingClientRect();\n    removeExistingPlaceholder(event.currentTarget);\n\n    if (\n      (this.vertical && event.clientY === 0) ||\n      (!this.vertical && event.clientX === 0)\n    ) {\n      currentDroparea = null;\n      currentDraggedItem = null;\n      currentPosition = null;\n    } else if (\n      (this.vertical && event.clientY < dropareaBounds.top) ||\n      (!this.vertical && event.clientX < dropareaBounds.left)\n    ) {\n      insertPlaceholder(event.currentTarget, \"start\");\n      currentPosition = 0;\n    }\n  },\n\n  dragover: function (event) {\n    event.preventDefault();\n    const droparea = event.currentTarget;\n    const items = Array.from(droparea.children).filter(\n      (child) => !child.classList.contains(\"drag-placeholder\")\n    );\n\n    if (!items.length) {\n      if (!placeholderElement) {\n        insertPlaceholder(droparea);\n      }\n      currentPosition = 0;\n      currentDroparea = droparea.id;\n      return;\n    }\n\n    const compareVal = this.vertical ? event.clientY : event.clientX;\n    const targetItem = items.find((item, index) => {\n      if (\n        (this.vertical && item.getBoundingClientRect().top > compareVal) ||\n        (!this.vertical && item.getBoundingClientRect().left > compareVal)\n      ) {\n        currentPosition = index;\n        currentDroparea = droparea.id;\n        return true;\n      }\n      return false;\n    });\n\n    if (\n      !targetItem &&\n      ((this.vertical &&\n        compareVal > items[items.length - 1].getBoundingClientRect().bottom) ||\n        (!this.vertical &&\n          compareVal > items[items.length - 1].getBoundingClientRect().right))\n    ) {\n      currentPosition = items.length;\n      currentDroparea = droparea.id;\n    }\n\n    if (\n      !placeholderElement ||\n      (targetItem && placeholderElement.nextSibling !== targetItem)\n    ) {\n      insertPlaceholder(droparea, \"before\", targetItem);\n    }\n  },\n\n  connectedCallback: function () {\n    if (this.droparea) {\n      this.addEventListener(\"drop\", this.drop);\n      this.addEventListener(\"dragover\", this.dragover);\n      this.addEventListener(\"dragleave\", this.dragleave);\n    }\n  },\n\n  disconnectedCallback: function () {\n    if (this.droparea) {\n      this.removeEventListener(\"drop\", this.drop);\n      this.removeEventListener(\"dragover\", this.dragover);\n      this.removeEventListener(\"dragleave\", this.dragleave);\n    }\n  }\n};\n", "// TODO: make i18n integrate with localStorage to store the current language and alternatives\n// Then make every translation available to every component\n\nconst i18n = (key) => key;\n\nexport default i18n;\n", "function formatEndpoint(endpoint) {\n  if (!endpoint.startsWith(\"http\")) {\n    return `/api/${endpoint}`.replace(\"//\", \"/\");\n  }\n  return endpoint;\n}\n\nexport async function handleResponse(response) {\n  if (!response.ok) {\n    const message = `An error has occurred: ${response.statusText}`;\n    throw new Error(message);\n  }\n\n  const text = await response.text();\n  if (!text) {\n    return null;\n  }\n  return JSON.parse(text);\n}\n\nexport async function get(endpoint, params) {\n  if (!endpoint) return;\n  let url = endpoint;\n  if (params) {\n    const queryString = new URLSearchParams(params).toString();\n    url += `?${queryString}`;\n  }\n  const response = await fetch(formatEndpoint(url));\n  return handleResponse(response);\n}\n\nexport async function post(endpoint, params) {\n  if (!endpoint) return;\n  const response = await fetch(formatEndpoint(endpoint), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(params)\n  });\n  return handleResponse(response);\n}\n\nexport async function patch(endpoint, updates) {\n  if (!endpoint) return;\n  const response = await fetch(formatEndpoint(endpoint), {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(updates)\n  });\n  return handleResponse(response);\n}\n\nexport async function remove(endpoint) {\n  if (!endpoint) return;\n  const response = await fetch(formatEndpoint(endpoint), {\n    method: \"DELETE\"\n  });\n  return handleResponse(response);\n}\n\nexport default { remove, patch, post, get };\n", "const typeHandlers = {\n  boolean: (value) => value === \"true\",\n  string: (value) => value,\n  array: (value, defaultValue) => {\n    try {\n      return JSON.parse(value);\n    } catch (error) {\n      console.error(\"Failed to parse array from string:\", error);\n      return defaultValue;\n    }\n  },\n  number: (value, defaultValue) =>\n    isNaN(Number(value)) ? defaultValue : Number(value),\n  date: (value) => new Date(value),\n  function: (value) => new Function(value), // Caution: security risk!\n  object: (value, defaultValue) => {\n    try {\n      return JSON.parse(value);\n    } catch (error) {\n      console.error(\"Failed to parse object from string:\", error);\n      return defaultValue;\n    }\n  }\n};\n\nexport const stringToType = (value, typeDefinition) => {\n  const handler = typeHandlers[typeDefinition.type];\n  if (handler) {\n    return handler(value, typeDefinition.defaultValue);\n  }\n  return value || typeDefinition.defaultValue;\n};\n\nexport const T = {\n  boolean: (options = {}) => ({\n    type: \"boolean\",\n    defaultValue: !!options.defaultValue || false,\n    ...options\n  }),\n\n  string: (options = {}) => ({\n    type: \"string\",\n    defaultValue: options.defaultValue || \"\",\n    enum: options.enum || [],\n    ...options\n  }),\n\n  array: (options = {}) => ({\n    type: \"array\",\n    defaultValue: options.defaultValue || [],\n    enum: options.enum || [],\n    ...options\n  }),\n\n  number: (options = {}) => ({\n    type: \"number\",\n    defaultValue: options.defaultValue || undefined,\n    ...options\n  }),\n\n  date: (options = {}) => ({\n    type: \"date\",\n    defaultValue: options.defaultValue || undefined,\n    ...options\n  }),\n\n  function: (options = {}) => ({\n    type: \"function\",\n    defaultValue: options.defaultValue || undefined,\n    ...options\n  }),\n\n  object: (options = {}) => ({\n    type: \"object\",\n    defaultValue: options.defaultValue || undefined,\n    ...options\n  }),\n\n  one: (relationship, targetForeignKey, options = {}) => ({\n    type: \"one\",\n    relationship,\n    targetForeignKey: targetForeignKey,\n    ...options\n  }),\n  many: (relationship, targetForeignKey, options = {}) => ({\n    type: \"many\",\n    relationship,\n    targetForeignKey: targetForeignKey,\n    ...options\n  }),\n\n  created_by: (referenceField, options = {}) => ({\n    type: \"object\",\n    metadata: \"user\",\n    referenceField,\n    ...options\n  }),\n  created_at: (referenceField, options = {}) => ({\n    type: \"string\",\n    metadata: \"timestamp\",\n    referenceField,\n    ...options\n  }),\n\n  text: (options = {}) => ({\n    formType: \"text\",\n    type: T.string(options),\n    ...options\n  }),\n  datetime: (options = {}) => ({\n    formType: \"datetime\",\n    type: T.string(options),\n    ...options\n  }),\n\n  time: (options = {}) => ({\n    formType: \"time\",\n    type: T.string(options),\n    ...options\n  }),\n\n  checkbox: (options = {}) => ({\n    formType: \"checkbox\",\n    type: T.boolean(options),\n    ...options\n  }),\n\n  radio: (options = {}) => ({\n    formType: \"radio\",\n    type: T.boolean(options),\n    ...options\n  }),\n\n  toggle: (options = {}) => ({\n    formType: \"toggle\",\n    type: T.boolean(options),\n    ...options\n  }),\n\n  textarea: (options = {}) => ({\n    formType: \"textarea\",\n    type: T.string(options),\n    ...options\n  }),\n\n  custom: (customFormType, options) => ({\n    customFormType,\n    type: T[customFormType](options),\n    ...options\n  })\n};\n\nexport default T;\n", "const isServer = typeof window === \"undefined\";\n// TODO: fix, URL adapter isn't working because service worker can't access replaceState\nexport default {\n  getItem: (key) => {\n    if (isServer) return;\n    const params = new URLSearchParams(window.location.search);\n    return params.get(key);\n  },\n\n  setItem: (key, value) => {\n    if (isServer) return;\n    const params = new URLSearchParams(window.location.search);\n    params.set(key, value);\n    window.history?.replaceState?.(\n      {},\n      \"\",\n      `${window.location.pathname}?${params}`\n    );\n    return { key };\n  },\n  removeItem: (key) => {\n    if (isServer) return;\n    const params = new URLSearchParams(window.location.search);\n    params.delete(key);\n    window.history.replaceState?.(\n      {},\n      \"\",\n      `${window.location.pathname}?${params}`\n    );\n    return { key };\n  }\n};\n", "import * as CSV from \"./csv.js\";\nimport datetime from \"./datetime.js\";\nimport { draggable, droparea } from \"./droparea.js\";\nimport * as File from \"./file.js\";\nimport i18n from \"./i18n.js\";\nimport { get, patch, post, remove } from \"./rest.js\";\nimport { T } from \"./types.js\";\nimport url from \"./url.js\";\n\nfunction debounce(func, wait) {\n  let timeout;\n  return function (...args) {\n    const context = this;\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(context, args), wait);\n  };\n}\n\nfunction event(type, ...attrs) {\n  const message = { type };\n  attrs.forEach((attr) => {\n    Object.assign(message, attr);\n  });\n  navigator.serviceWorker.controller.postMessage(message);\n}\n\nexport {\n  CSV,\n  datetime,\n  debounce,\n  draggable,\n  droparea,\n  event,\n  File,\n  get,\n  i18n,\n  patch,\n  post,\n  remove,\n  T,\n  url,\n};\n"],
  "mappings": "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",
  "names": ["parseCSV", "event", "parseCSV", "event", "droparea"]
}
